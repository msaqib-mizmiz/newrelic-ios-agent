name: CI
on: push
      
jobs:
  # test:
  #   name : Test 
  #   # runs-on: will be set to macos-latest when running on actual GHA. 
  #   # *** runs-on: ubuntu-latest is used when running via act on mac os. ***
  #   runs-on: macos-latest 
  #   steps:
  #   - uses: actions/checkout@v3
  #     with: 
  #       submodules: true
    
  #   - uses: maxim-lobanov/setup-xcode@v1
  #     with:
  #       xcode-version: '14.1'

  #   - name: Install gems
  #     run: bundle install

  #   - name: Run tests on iOS and tvOS (using fastlane)
  #     run: bundle exec fastlane runTests
  
  deployS3:
    name: DeployS3
    # runs-on: will be set to macos-latest when running on actual GHA. 
    # *** runs-on: ubuntu-latest is used when running via act on mac os. ***
    runs-on: macos-latest 
    # needs: [test]
    outputs:
      version: ${{ steps.setOutput.outputs.version }}
    steps:
    - uses: actions/checkout@v3
      with: 
        submodules: true
    
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '14.1'

    - name: Install gems
      run: bundle install

    - name: Build NewRelic.xcframework (using fastlane)
      run: bundle exec fastlane buildAndZip

    - name: Get name
      run: echo "version=$(cat fastlane/build_version)" >> $GITHUB_ENV

    - id: setOutput
      name: Print name
      run: echo "version=${{ env.version }}"  >> $GITHUB_OUTPUT

    - name: Deploy to staging S3
      run: "aws s3 cp NewRelic_XCFramework_Agent_${{ env.version }}.zip s3://nr-downloads-main/ios-v5/"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  
  deployCocoapods:
    name: DeployCocoapods
    runs-on: macos-latest 
    needs: [deployS3]
    steps:
    - uses: actions/checkout@v3
      with: 
        submodules: true

    - name: Install gems
      run: bundle install

    - name: Get name
      run: echo "version=${{needs.deployS3.outputs.version}}" >> $GITHUB_ENV

    - name: Print XCFramework name
      run: echo "${{ env.version }}" 

    - name: Create Podspec for XCFramework version
      run: |
        mkdir -p "release/cocoapods/${{ env.version }}"
        cp cocoapods/NewRelicAgent.podspec.template "release/cocoapods/${{ env.version }}/NewRelicAgent.podspec"
        REPLACE=X.XX
        pushd "release/cocoapods/${{ env.version }}"
        sed -i bak "s/$REPLACE/${{ env.version }}/g" NewRelicAgent.podspec
        sed -i -e 's/ios_agent/ios-v5/g' NewRelicAgent.podspec
        rm NewRelicAgent.podspec-e
        rm NewRelicAgent.podspecbak
        cat NewRelicAgent.podspec

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        title: "[${{ env.version }}] Staging Cocoapods"
        branch: "auto-staging-cocoapods-release-${{ env.version }}"
        base: develop

  deploySPM:
    name: deploySPM
    runs-on: macos-latest 
    needs: [deployS3]
    steps:
    - uses: actions/checkout@v3
      with: 
        submodules: true

    - name: Install gems
      run: bundle install

    - name: Get name
      run: echo "version=${{needs.deployS3.outputs.version}}" >> $GITHUB_ENV

    - name: Print XCFramework name
      run: echo "${{ env.version }}" 

    - name: Create Package.swift for XCFramework version
      run: |
        mkdir -p "release/spm/${{ env.version }}"

        cp NewRelic-SwiftPackage/Package.swift.template "release/spm/${{ env.version }}/Package.swift"
        cp cocoapods/README.md "release/spm/${{ env.version }}/"
        REPLACEVER={{VERSION}}
        REPLACECHECKSUM={{CHECKSUM}}
        pushd "release/spm/${{ env.version }}"

        XCFRAMEWORK_NAME="NewRelic_XCFramework_Agent_${{ env.version }}.zip"
        curl https://download.newrelic.com/ios-v5/$XCFRAMEWORK_NAME -o $XCFRAMEWORK_NAME
        SPM_CHECKSUM=`swift package compute-checksum  ${XCFRAMEWORK_NAME}`

        sed -i bak "s/$REPLACEVER/${{ env.version }}/g" Package.swift
        sed -i -e "s/$REPLACECHECKSUM/$SPM_CHECKSUM/g" Package.swift
        sed -i -e 's/ios_agent/ios-v5/g' Package.swift
        rm Package.swift-e
        rm Package.swiftbak

        rm $XCFRAMEWORK_NAME

        cat Package.swift

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        title: "[${{ env.version }}] Staging SPM"
        branch: "auto-staging-spm-release-${{ env.version }}"
        base: develop

